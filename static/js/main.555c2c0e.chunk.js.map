{"version":3,"sources":["components/CurrencyList/FavoriteModal/FavoriteModal.module.scss","components/CurrencyList/ChangeBaseCurrency/ChangeBaseCurrency.module.scss","components/Navigation/Drawer.tsx","components/Navigation/MenuToggle.tsx","redux/currencyList-selector.ts","redux/currencyList-reducer.ts","components/CurrencyList/CurrencyTable/CurrencyTable.tsx","components/common/helpers.ts","components/CurrencyList/FavoriteModal/FavoriteModalForm/FavoriteModalForm.tsx","components/CurrencyList/FavoriteModal/FavoriteModal.tsx","components/CurrencyList/ChangeBaseCurrency/ChangeBaseCurrency.tsx","components/CurrencyList/CurrencyList.tsx","components/Loader/Loader.tsx","App.tsx","components/hoc/WithReactSuspense.tsx","reportWebVitals.ts","redux/redux-store.ts","index.tsx","components/common/all-currencies.ts","api/converter-api.ts","App.module.css","components/Navigation/Drawer.module.scss","components/CurrencyList/CurrencyList.module.scss","components/CurrencyList/FavoriteModal/FavoriteModalForm/FavoriteModalForm.module.scss","components/Navigation/MenuToggle.module.scss","components/CurrencyList/CurrencyTable/CurrencyTable.module.scss","redux/converter-reducer.ts"],"names":["module","exports","Drawer","props","linksBlock","to","label","map","link","index","onClick","onClose","activeClassName","classes","active","Fragment","className","classNames","close","isOpen","Backdrop","open","MenuToggle","cls","join","onToggle","getIsLoading","state","currencyList","loading","getFavorites","favoriteCurrencies","getBaseCurrency","base","getRates","rates","TOGGLE_LOADING","SET_RATES","SET_BASE_CURRENCY","SET_FAVORITE_CURRENCIES","initialState","actions","type","baseCurrency","favoriteList","loadCurrencies","dispatch","getState","a","converterAPI","dataRates","CurrencyTable","useDispatch","useSelector","useEffect","tableCurrencyRow","allCurrencies","favoritesCurrencies","nonFavorites","filter","currency","includes","sortFavorites","Object","keys","rate","TableRow","TableCell","align","favoriteCurrency","TableContainer","component","Paper","Table","table","size","aria-label","TableHead","width","TableBody","FavoriteModalForm","checkBoxes","handleChange","checkedArr","allAvailableCurrencies","checked","some","curr","checkBox","FormControlLabel","control","Checkbox","name","onChange","color","value","favoriteModal","initialValues","checkedCurrencies","onSubmit","values","toggleClose","role","aria-labelledby","submitButton","Button","variant","FavoriteModal","Dialog","aria-describedby","dialogWindow","DialogTitle","id","DialogContent","ChangeBaseCurrency","useState","setBase","optionCurrencyBlock","InputLabel","htmlFor","Select","native","event","target","inputProps","select","CurrencyList","isFavoriteModal","setIsFavoriteModal","settingsButtons","currencyTable","Loader","ConvertScreen","React","lazy","App","Component","isMenuOpen","setIsMenuOpen","onMenuToggle","prevState","AppBar","position","Toolbar","IconButton","edge","menuButton","Typography","title","path","render","Suspense","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","converter","converterReducer","action","store","createStore","applyMiddleware","thunkMiddleware","window","__store__","ReactDOM","document","getElementById","instanceAxios","axios","create","baseURL","convert","fromCurrency","toCurrency","get","data","SET_CONVERTED_CURRENCY","SET_CURR_INFO","InitialState","convertedCurrency","amount","currencyObj","convertCurrency","parseFloat"],"mappings":"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","file":"static/js/main.555c2c0e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"FavoriteModal_modal__1HIVh\",\"dialogWindow\":\"FavoriteModal_dialogWindow__1Fqzi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"ChangeBaseCurrency_select__3HkCv\"};","import {Backdrop} from '@material-ui/core'\nimport React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport classes from './Drawer.module.scss'\nimport classNames from 'classnames'\n\ntype Link = {\n  to: string,\n  label: string\n}\n\ntype Props = {\n  isOpen: boolean,\n  onClose: () => void\n}\n\n\nconst Drawer: React.FC<Props> = (props) => {\n\n  const links: Array<Link> = [\n    {to: '/main', label: 'Главная'},\n    {to: '/converter', label: 'Конвертер'}\n  ]\n\n  const linksBlock = links.map((link, index) => {\n    return (\n      <li key={index}>\n        <NavLink\n          to={link.to}\n          onClick={props.onClose}\n          activeClassName={classes.active}\n        >\n          {link.label}\n        </NavLink>\n      </li>\n    )\n  })\n\n  return (\n    <React.Fragment>\n      <nav className={classNames(classes.Drawer, {[classes.close]: !props.isOpen})}>\n        <ul>\n          {linksBlock}\n        </ul>\n      </nav>\n      {props.isOpen && <Backdrop open={props.isOpen} onClick={props.onClose}/>}\n    </React.Fragment>\n  )\n}\n\nexport default Drawer","import React from 'react'\nimport classes from './MenuToggle.module.scss'\n\ntype Props = {\n  isOpen: boolean\n  onToggle: () => void\n}\n\nconst MenuToggle: React.FC<Props> = (props) => {\n  const cls = [\n    classes.MenuToggle,\n    'fa',\n    'fa-times',\n    classes.open\n  ]\n\n  return (\n    <React.Fragment>\n      {props.isOpen && <i className={cls.join(' ')} onClick={props.onToggle}></i>}\n    </React.Fragment>\n  )\n}\n\nexport default MenuToggle","import {AppStateType} from \"./redux-store\";\n\nexport const getIsLoading = (state: AppStateType) => {\n  return state.currencyList.loading\n}\n\nexport const getFavorites = (state: AppStateType) => {\n  return state.currencyList.favoriteCurrencies\n}\n\nexport const getBaseCurrency = (state: AppStateType) => {\n  return state.currencyList.base\n}\n\nexport const getRates = (state: AppStateType) => {\n  return state.currencyList.rates\n}","\nimport {BaseThunkType, InferActionsType} from './redux-store'\nimport {converterAPI} from \"../api/converter-api\";\nimport { RatesType } from '../types/types';\n\nconst TOGGLE_LOADING = 'frontend-interview-converter/currencyList/TOGGLE_LOADING'\nconst SET_RATES = 'frontend-interview-converter/currencyList/SET_RATES'\nconst SET_BASE_CURRENCY = 'frontend-interview-converter/currencyList/SET_BASE_CURRENCY'\nconst SET_FAVORITE_CURRENCIES = 'frontend-interview-converter/currencyList/SET_FAVORITE_CURRENCIES'\n\n\ntype InitialStateCurrencyListType = {\n  loading: boolean,\n  favoriteCurrencies: Array<string>,\n  base: string,\n  rates: RatesType\n}\n\nconst initialState: InitialStateCurrencyListType = {\n  loading: false,\n  favoriteCurrencies: [],\n  base: 'USD',\n  rates: {}\n}\n\nexport const currencyListReducer = (state = initialState, action: ActionsType) => {\n  switch (action.type) {\n    case TOGGLE_LOADING:\n      return {\n        ...state,\n        loading: action.loading\n      }\n    case SET_BASE_CURRENCY:\n      return {\n        ...state,\n        base: action.baseCurrency\n      }\n    case SET_RATES:\n      return {\n        ...state,\n        rates: action.rates\n      }\n    case SET_FAVORITE_CURRENCIES:\n      return {\n        ...state,\n        favoriteCurrencies: action.favoriteList\n      }\n    default:\n      return state\n  }\n}\n\nexport const actions = {\n  toggleLoading(loading: boolean) {\n    return {\n      type: TOGGLE_LOADING,\n      loading: loading\n    } as const\n  },\n  setBase(baseCurrency: string) {\n    return {\n      type: SET_BASE_CURRENCY,\n      baseCurrency: baseCurrency\n    } as const\n  },\n  setRates(rates: RatesType) {\n    return {\n      type: SET_RATES,\n      rates: rates\n    } as const\n  },\n  setFavoriteCurrencies(favoriteList: Array<string>) {\n    return {\n      type: SET_FAVORITE_CURRENCIES,\n      favoriteList: favoriteList\n    } as const\n  }\n}\n\n\nexport const loadCurrencies = (): ThunkType => async (dispatch, getState) => {\n  dispatch(actions.toggleLoading(true))\n  const dataRates = await converterAPI.getRates(getState().currencyList.base)\n  dispatch(actions.setRates(dataRates.rates))\n  dispatch(actions.toggleLoading(false))\n}\n\n\ntype ActionsType = InferActionsType<typeof actions>\ntype ThunkType = BaseThunkType<ActionsType>","import React, {useEffect} from \"react\";\nimport {Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from \"@material-ui/core\";\nimport classes from \"./CurrencyTable.module.scss\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getBaseCurrency, getFavorites, getIsLoading, getRates} from \"../../../redux/currencyList-selector\";\nimport { loadCurrencies } from \"../../../redux/currencyList-reducer\";\nimport { sortFavorites } from \"../../common/helpers\";\nimport classNames from \"classnames\";\n\n\nconst CurrencyTable: React.FC = () => {\n\n  const dispatch = useDispatch()\n  const rates = useSelector(getRates)\n  const base = useSelector(getBaseCurrency)\n  const favoriteCurrencies = useSelector(getFavorites)\n  const loading = useSelector(getIsLoading)\n\n  useEffect(() => {\n    dispatch(loadCurrencies())\n  }, [dispatch])\n\n  const sortFavoriteCurrencies = sortFavorites(Object.keys(rates), favoriteCurrencies)\n\n  const tableCurrencyRow = sortFavoriteCurrencies.map((rate, index) => {\n    return (\n      <TableRow key={index}>\n        <TableCell align=\"center\">\n          {loading\n            ? '...loading'\n            : <React.Fragment>\n              {`${base}/`}\n              <span className={classNames({[classes.favoriteCurrency] : favoriteCurrencies.includes(rate)})}>\n              {rate}</span>\n            </React.Fragment>\n          }\n        </TableCell>\n        <TableCell align=\"center\">{!loading ? rates[rate] : '...loading'}</TableCell>\n      </TableRow>\n    )\n  })\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n        <TableHead>\n          <TableRow>\n            <TableCell width={'160px'} align=\"center\">Пары</TableCell>\n            <TableCell width={'160px'} align=\"center\">Курс</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {tableCurrencyRow}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\nexport default CurrencyTable","\n\nexport const sortFavorites = (allCurrencies: Array<string>, favoritesCurrencies: Array<string>) => {\n  const nonFavorites = allCurrencies.filter(currency => !favoritesCurrencies.includes(currency))\n\n  return [...favoritesCurrencies, ...nonFavorites]\n}","import {Button, Checkbox, FormControlLabel} from \"@material-ui/core\";\nimport {Form, Formik} from \"formik\";\nimport React from \"react\";\nimport classes from './FavoriteModalForm.module.scss'\nimport {allAvailableCurrencies} from \"../../../common/all-currencies\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getFavorites} from \"../../../../redux/currencyList-selector\";\nimport { actions } from \"../../../../redux/currencyList-reducer\";\n\ntype Props = {\n  toggleClose: () => void\n}\n\nconst FavoriteModalForm: React.FC<Props> = (props) => {\n\n  // Any because it is formik handleChange\n  const checkBoxes = (handleChange: any, checkedArr: Array<string>) => {\n    const checkboxes = allAvailableCurrencies.map((currency, index) => {\n      const checked = checkedArr.some(curr => curr === currency)\n      return (\n        <div className={classes.checkBox} key={index}>\n          <FormControlLabel control={\n            <Checkbox\n              name=\"checkedCurrencies\"\n              onChange={ handleChange }\n              checked={checked}\n              color=\"primary\"\n              value={currency}\n            />} label={currency} />\n        </div>\n      )\n    })\n    return checkboxes\n  }\n\n  const dispatch = useDispatch()\n  const favoriteCurrencies = useSelector(getFavorites)\n\n  return (\n    <div className={classes.favoriteModal}>\n      <Formik\n        initialValues={{\n          checkedCurrencies: favoriteCurrencies,\n        }}\n        onSubmit={(values) => {\n          dispatch(actions.setFavoriteCurrencies(values.checkedCurrencies))\n          props.toggleClose()\n          // alert(JSON.stringify(values, null, 2));\n        }}\n      >\n        {({values, handleChange}) => (\n          <Form>\n            <div role=\"group\" aria-labelledby=\"checkbox-group\">\n              {checkBoxes(handleChange, values.checkedCurrencies)}\n            </div>\n            <div className={classes.submitButton}>\n              <Button type=\"submit\" color={'primary'} variant={'contained'}>Submit</Button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  )\n\n}\n\n\nexport default FavoriteModalForm","import React from \"react\";\nimport { Dialog, DialogContent, DialogTitle} from \"@material-ui/core\";\nimport classes from './FavoriteModal.module.scss';\nimport FavoriteModalForm from \"./FavoriteModalForm/FavoriteModalForm\";\n\ntype Props = {\n  toggleClose: () => void\n}\n\nconst FavoriteModal:React.FC<Props> = ({toggleClose}) => {\n  return (\n      <Dialog\n        open={true}\n        onClose={toggleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        className={classes.dialogWindow}\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Избранное\"}</DialogTitle>\n        <DialogContent>\n            <FavoriteModalForm toggleClose={toggleClose}/>\n        </DialogContent>\n      </Dialog>\n  )\n}\nexport default FavoriteModal","import { InputLabel, Select } from '@material-ui/core'\nimport React, {useState} from 'react'\nimport {allAvailableCurrencies} from \"../../common/all-currencies\";\nimport classes from './ChangeBaseCurrency.module.scss'\nimport {useDispatch} from \"react-redux\";\nimport {actions, loadCurrencies} from '../../../redux/currencyList-reducer';\n\n\nconst ChangeBaseCurrency: React.FC = () => {\n\n  const [base, setBase] = useState('USD')\n  const dispatch = useDispatch()\n\n  const handleChange = (event: React.ChangeEvent<{ name?: string; value: unknown }>) => {\n    const base = event.target.value as string\n    setBase(base)\n    dispatch(actions.setBase(base))\n    dispatch(loadCurrencies())\n\n  }\n\n  const optionCurrencyBlock = allAvailableCurrencies.map((currency, index) => {\n    return (\n      <option value={currency} key={index}>{currency}</option>\n    )\n  })\n\n  return (\n    <React.Fragment>\n      <InputLabel htmlFor=\"age-native-simple\">Баз. валюта</InputLabel>\n      <Select\n        native\n        value={base}\n        onChange={handleChange}\n        inputProps={{\n          name: 'age',\n          id: 'age-native-simple',\n        }}\n        className={classes.select}\n      >\n        <option aria-label=\"None\" value=\"Hello\" />\n        {optionCurrencyBlock}\n      </Select>\n    </React.Fragment>\n  )\n}\n\nexport default ChangeBaseCurrency","import {Button} from '@material-ui/core'\nimport React, {useState} from 'react'\nimport classes from './CurrencyList.module.scss'\nimport CurrencyTable from \"./CurrencyTable/CurrencyTable\";\nimport FavoriteModal from \"./FavoriteModal/FavoriteModal\";\nimport ChangeBaseCurrency from \"./ChangeBaseCurrency/ChangeBaseCurrency\";\n\nconst CurrencyList: React.FC = () => {\n\n  const [isFavoriteModal, setIsFavoriteModal] = useState(false)\n\n  const onCloseFavoriteModal = () => {\n    setIsFavoriteModal(false)\n  }\n\n  return (\n    <div className={classes.currencyList}>\n      <div className={classes.settingsButtons}>\n        <div>\n         <ChangeBaseCurrency />\n        </div>\n        <div>\n          <Button variant=\"outlined\" color=\"primary\" onClick={() => setIsFavoriteModal(true)}>\n            Избранное\n          </Button>\n        </div>\n      </div>\n      <div className={classes.currencyTable}>\n        <CurrencyTable />\n      </div>\n      {isFavoriteModal && <FavoriteModal toggleClose={onCloseFavoriteModal} />}\n    </div>\n  )\n}\n\n\nexport default CurrencyList","import React from \"react\";\nimport './Loader.css'\n\n\nconst Loader: React.FC = () => {\n  return (\n    <div className='Loader'>\n      <div className=\"loadingio-spinner-pulse-4acf414061e\">\n        <div className=\"ldio-scotsrxdwc\">\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n    </div>\n\n  )\n}\n\nexport default Loader","import React, {useState} from 'react';\nimport {Redirect, Route, Switch } from 'react-router-dom';\nimport classes from './App.module.css'\n//import ConvertScreen from \"./components/ConvertScreen/ConvertScreen\";\nimport {AppBar, IconButton, Toolbar, Typography} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Drawer from \"./components/Navigation/Drawer\";\nimport MenuToggle from \"./components/Navigation/MenuToggle\";\nimport CurrencyList from \"./components/CurrencyList/CurrencyList\";\nimport withReactSuspense from \"./components/hoc/WithReactSuspense\";\n\nconst ConvertScreen = React.lazy(() => import('./components/ConvertScreen/ConvertScreen'))\n\nconst App: React.FC = () =>  {\n\n  const [isMenuOpen, setIsMenuOpen] = useState(false)\n\n  const onMenuToggle = () => {\n    setIsMenuOpen((prevState) => !prevState)\n  }\n\n  return (\n    <div className={classes.App}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={onMenuToggle}>\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Currency converter\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer isOpen={isMenuOpen} onClose={onMenuToggle}/>\n      <MenuToggle isOpen={isMenuOpen} onToggle={onMenuToggle}/>\n      <Switch>\n        <Route path={'/main'} render={() => <CurrencyList />}/>\n        <Route path={'/converter'} render={withReactSuspense(ConvertScreen)}/>\n        <Redirect to={'/main'} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport Loader from \"../Loader/Loader\";\n\n\nexport default function withReactSuspense<WCP>(Component: React.ComponentType<WCP>) {\n  return (props: WCP) => {\n    return (\n      <React.Suspense fallback={<Loader/>}>\n        <Component {...props} />\n      </React.Suspense>\n    )\n  }\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport {Action, applyMiddleware, combineReducers, createStore} from \"redux\";\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk'\nimport {converterReducer} from \"./converter-reducer\";\nimport {currencyListReducer} from \"./currencyList-reducer\";\n\nconst rootReducer = combineReducers({\n  converter: converterReducer,\n  currencyList: currencyListReducer\n})\n\ntype RootReducerType = typeof rootReducer\nexport type AppStateType = ReturnType<RootReducerType>\n\ntype PropertiesType<T> = T extends {[key: string]: infer U} ? U : never\n\n\nexport type InferActionsType<U extends {[keys: string]: (...args: any) => any}> = ReturnType<PropertiesType<U>>\nexport type BaseThunkType<AT extends Action, R = Promise<void>> = ThunkAction<R, AppStateType, never, AT>\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\n\n// @ts-ignore\nwindow.__store__ = store\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from 'react-router-dom'\nimport {Provider} from \"react-redux\";\nimport store from './redux/redux-store';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\n\nexport const allAvailableCurrencies = [\"CAD\", \"HKD\", \"ISK\", \"PHP\", \"DKK\", \"HUF\", \"CZK\", \"GBP\", \"RON\", \"SEK\", \"IDR\", \"INR\", \"BRL\", \"RUB\", \"HRK\", \"JPY\", \"THB\", \"CHF\", \"EUR\", \"MYR\", \"BGN\", \"TRY\", \"CNY\", \"NOK\", \"NZD\", \"ZAR\", \"USD\", \"MXN\", \"SGD\", \"AUD\", \"ILS\", \"KRW\", \"PLN\"] as const\n\n\n\n","import axios from \"axios\";\nimport {IResponseCurrencies} from \"../types/types\";\n\nconst instanceAxios = axios.create({\n  baseURL: 'https://api.exchangeratesapi.io/latest'\n})\n\n\nexport const converterAPI = {\n  async convert(fromCurrency: string, toCurrency: string) {\n    return instanceAxios.get<IResponseCurrencies>(`?base=${fromCurrency}&symbols=${toCurrency}`)\n      .then(data => data.data)\n  },\n  async getRates(base: string) {\n    return instanceAxios.get<IResponseCurrencies>(`?base=${base}`)\n      .then(data => data.data)\n  }\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__3iSZi\",\"close\":\"Drawer_close__3eOrQ\",\"active\":\"Drawer_active__2SC30\",\"closeButton\":\"Drawer_closeButton__2ubcg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currencyList\":\"CurrencyList_currencyList__2MIXU\",\"currencyTable\":\"CurrencyList_currencyTable__1Kb7H\",\"settingsButtons\":\"CurrencyList_settingsButtons__3OKlE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitButton\":\"FavoriteModalForm_submitButton__17MWr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__35zWV\",\"open\":\"MenuToggle_open__3gd51\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"favoriteCurrency\":\"CurrencyTable_favoriteCurrency__2WGmy\"};","import {IResponseCurrencies} from \"../types/types\"\nimport {BaseThunkType, InferActionsType} from \"./redux-store\";\nimport {converterAPI} from \"../api/converter-api\";\n\n\nconst SET_CONVERTED_CURRENCY = 'frontend-interview-converter/converter/SET_CONVERTED_CURRENCY'\nconst TOGGLE_LOADING = 'frontend-interview-converter/converter/TOGGLE_LOADING'\nconst SET_CURR_INFO = 'frontend-interview-converter/converter/SET_CURR_INFO'\n\ninterface IConverterInitialState {\n  convertedCurrency: IResponseCurrencies\n  loading: boolean\n  amount: number\n  to: string,\n  base: string\n}\n\nconst InitialState: IConverterInitialState = {\n  convertedCurrency: null as unknown as IResponseCurrencies,\n  loading: false,\n  amount: 1,\n  base: '',\n  to: ''\n}\n\nexport const converterReducer = (state = InitialState, action: ActionType) => {\n  switch (action.type) {\n    case SET_CONVERTED_CURRENCY:\n      return {\n        ...state,\n        convertedCurrency: action.currencyObj\n      }\n    case SET_CURR_INFO:\n      return {\n        ...state,\n        amount: action.amount,\n        base: action.base,\n        to: action.to\n      }\n    case TOGGLE_LOADING:\n      return {\n        ...state,\n        loading: action.loading\n      }\n    default:\n      return state\n  }\n}\n\n\nexport const actions = {\n  setConvertedCurrency(currencyObj: IResponseCurrencies) {\n    return {\n      type: SET_CONVERTED_CURRENCY,\n      currencyObj: currencyObj\n    } as const\n  },\n\n  toggleLoading(loading: boolean) {\n    return {\n      type: TOGGLE_LOADING,\n      loading: loading\n    } as const\n  },\n\n  setConvertInfo(fromCurrency: string, toCurrency: string, amount: number) {\n    return {\n      type: SET_CURR_INFO,\n      base: fromCurrency,\n      to: toCurrency,\n      amount: amount\n    } as const\n  }\n}\n\nexport const convertCurrency = (fromCurrency: string, toCurrency: string, amount: string): ThunkActions => async (dispatch) => {\n  dispatch(actions.toggleLoading(true))\n  if (amount !== '') {\n    dispatch(actions.setConvertInfo(fromCurrency, toCurrency, parseFloat(amount)))\n  }\n  const currencyObj = await converterAPI.convert(fromCurrency, toCurrency)\n  dispatch(actions.setConvertedCurrency(currencyObj))\n  dispatch(actions.toggleLoading(false))\n}\n\n\ntype ThunkActions = BaseThunkType<ActionType>\ntype ActionType = InferActionsType<typeof actions>\n\n"],"sourceRoot":""}